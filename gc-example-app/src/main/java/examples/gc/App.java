/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package examples.gc;

import lombok.SneakyThrows;

import java.util.ArrayList;
import java.util.concurrent.ConcurrentHashMap;

public class App {

    private volatile int counter = 0;
    private final ConcurrentHashMap<Integer, String> storage = new ConcurrentHashMap<>(750, 0.5f, 150);


    Runnable runnable = new Runnable() {
        @Override
        public void run() {
            String threadName = Thread.currentThread().getName();
            for (int i = 0; i < Integer.MAX_VALUE; i++) {
                counter++;
                storage.putIfAbsent(counter, threadName);
                if( i % 1000000 == 0)
                    System.out.println(threadName + " Counter " + counter);
            }
        }
    };

    @SneakyThrows
    public void fillMapInParallel() {

        ArrayList<Thread> threadList = new ArrayList<>(150);
        for (int j = 0; j < 150; j++) {
            Thread t = new Thread(this.runnable);
            t.setName("T " + j);
            threadList.add(t);
        }

        threadList.forEach(Thread::start);
    }

    public static void main(String[] args) {
        App theApp = new App();
        theApp.fillMapInParallel();
    }
}
